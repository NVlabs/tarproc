#!/usr/bin/python3
#
# Copyright (c) 2017-2019 NVIDIA CORPORATION. All rights reserved.
# This file is part of webloader (see TBD).
# See the LICENSE file for licensing terms (BSD-style).
#

import os
import sys
import argparse
import time
from itertools import islice
import subprocess
import braceexpand

from tarproclib import reader, writer

parser = argparse.ArgumentParser("""
Dump data from a web dataset.
""")
parser.add_argument("-v", "--verbose", action="store_true")
parser.add_argument("-c", "--command", default=None)
parser.add_argument("-T", "--filelist", default=None)
parser.add_argument("-b", "--braceexpand", action="store_true")
parser.add_argument("--maxout", type=int, default=1000000000)
parser.add_argument("input", nargs="*")
args = parser.parse_args()

def dprint(*args, **kw):
    print(*args, file=sys.stderr, **kw)

def read_filelist():
    stream = open(args.filelist, "r") if args.filelist!="-" else sys.stdin
    for line in stream: yield line.strip()
    stream.close()

if args.filelist is not None:
    filelist = read_filelist()
elif not args.braceexpand:
    filelist = args.input
else:
    filelist = []
    for f in args.input:
        filelist += braceexpand.braceexpand(f)

dprint(f"# got {len(filelist)} files")

n = 0
sink = writer.TarWriter(sys.stdout.buffer)
for fname in filelist:
    dprint(f"# {n} {fname}")
    if args.command:
        cmd = args.command.format(fname)
        stream = subprocess.Popen(cmd, bufsize=16384, shell=True, stdout=subprocess.PIPE).stdout
    elif fname=="-":
        stream = sys.stdin.buffer
    else:
        stream = open(fname, "rb")
    source = reader.tariterator(stream)
    for sample in source:
        if n >= args.maxout: break
        sink.write(sample)
        n += 1
    if n >= args.maxout: break
    stream.close()
sink.close()

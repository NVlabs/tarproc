#!/usr/bin/python3
#
# Copyright (c) 2017-2019 NVIDIA CORPORATION. All rights reserved.
# This file is part of webloader (see TBD).
# See the LICENSE file for licensing terms (BSD-style).
#

import os
import sys
import argparse
import time
import re

import io
import matplotlib
import numpy as np
import pickle
from itertools import islice
from tarproclib import reader

parser = argparse.ArgumentParser("""
Dump data from a web dataset.
""")
parser.add_argument("-f", "--field", default=None,
                    help="field to be viewed")
parser.add_argument("-c", "--count", type=int, default=10000000000)
parser.add_argument("--silent", action="store_true")
parser.add_argument("--verbatim-keys", action="store_true")
parser.add_argument("input", default="-", nargs="?", help="tar file")
args = parser.parse_args()

if args.field is not None:
    import matplotlib as mpl
    import matplotlib.pylab as plt
    import PIL
    plt.ion()
    fields = re.split("[,; ]", args.field)
else:
    fields = None

for i, sample in enumerate(reader.TarIterator(args.input)):
    if i >= args.count: break
    try:
        if not args.verbatim_keys:
            sample = {k.lower(): v for k, v in sample.items()}
        if not args.silent:
            for k, v in sorted(list(sample.items())):
                print(f"{k:20s}\t{str(v)[:60]}", file=sys.stderr)
        if fields is not None:
            image = None
            for f in fields:
                if f in sample:
                    image = sample[f]
            if image is None:
                continue
            image = PIL.Image.open(io.BytesIO(image))
            if not args.silent:
                k = "__image__"
                print(f"{k:20s}\t{image}", file=sys.stderr)
            plt.imshow(image)
            plt.show()
            plt.waitforbuttonpress()
        if not args.silent:
            print(file=sys.stderr)
    except Exception as e:
        print(e)
        time.sleep(1)
